var mongoose = require('mongoose');
var mongooseIncrement = require('mongoose-increment');
var increment = mongooseIncrement(mongoose);
var Schema = mongoose.Schema;

var useraccountSchema = new Schema({
	userid: Number,
	username: String,
	first_name: String,
	last_name: String,
	description: String,
	DOB: Date,
	address_1: String,
	address_2: String,
	country: String,
	zip_code: String,
	city: String,
	state: String,
	email_address: String,
	phone_code: String,
	phone_number: String,
	password: String,
	ffl_number: String,
	ip_address: String,
	mac_address: String,
	ZERVPlatformAcctNumber: Number,
	MFAverification1: Boolean,
	MFAverification2: Boolean,
	MFAverification3: Boolean,
	company_descridescription: String,
	business_classification: String,
	logo: String,
	fb_account: String,
	instagram_account: String,
	twitter_account: String,
	account_type: String,
	EIN: String,
	ffl_license_no: String,
	ffl_license: String,
	atf_license_no: String,
	atf_license_no: String,
	itar_license_no: String,
	itr_license: String,
	businesstax_license_no: String,
	businesstax_license_no: String,
	duns: String,
	duns4: String,
	cage: String,
	ncage: String,
	dodaac: String,
	purposeOfRegistration: String,
	registrationDate: Date,
	expirationDate: Date,
	activationDate: Date,
	lastUpdatedDate: Date,
	legalBusinessName: String,
	doingBusinessAsName: String,
	companyDivision: String,
	divisionNumber: String,
	samAddress: String,
	congressionalDistrict: String,
	businessStartDate: Date,
	fiscalYearCloseDay: String,
	corporateUrl: String,
	corporateStructureCode: String,
	corporateStructureDescription: String,
	mailingAddress: String,
	stateOfIncorporation: String,
	countryOfIncorporation: String,
	govtBusinessPoc: String,
	altGovtBusinessPoc: String,
	pastPerformancePoc: String,
	altPastPerformancePoc: String,
	electronicBusinessPoc: String,
	altElectronicBusinessPoc: String,
	creditCardUsage: Boolean,
	hasDelinquentFederalDebt: Boolean,
	hasKnownExclusion: Boolean,
	correspondenceFlag: String,
	samstatus: String,
	statusMessage: String,
	businessTypes: Array,
	sbaCertificationExpirationDate: Date,
	disasterRelief: Array,
	pscCodes: Array,
	certifications: Object,
	qualifications: Object
});

useraccountSchema.plugin(increment, {

	start: 100,
	modelName: 'useraccounts',
	fieldName: 'user_id',
	unique: true,
	increment: 1,
});
useraccountSchema.plugin(increment, {

	start: 1000000000,
	modelName: 'useraccounts',
	fieldName: 'ZERVPlatformAcctNumber',
	unique: true,
	increment: 1,
});
var useraccountsModel = mongoose.model('useraccounts', useraccountSchema);

module.exports = useraccountsModel;

